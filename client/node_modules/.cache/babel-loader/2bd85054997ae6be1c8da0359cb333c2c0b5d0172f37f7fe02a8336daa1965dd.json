{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Web Dev\\\\assignment 1\\\\bvc-course-registration-backend - Copy\\\\client\\\\src\\\\components\\\\Courses.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Courses() {\n  _s();\n  const [term, setTerm] = useState(\"\"); // Term selection\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\"); // For showing success message\n  const [searchTerm, setSearchTerm] = useState(\"\"); // New state for search term\n  const [availableCourses, setAvailableCourses] = useState([]); // Store the courses that are available\n  const [registeredCourses, setRegisteredCourses] = useState([]); // Store courses that are already registered\n  const [student, setStudent] = useState(null); // Store student data\n  const navigate = useNavigate();\n\n  // Fetch student data on component mount\n  useEffect(() => {\n    const fetchStudentData = async () => {\n      try {\n        const loggedInUser = sessionStorage.getItem(\"loggedInUser\");\n        if (loggedInUser) {\n          const response = await fetch(`http://localhost:5000/api/user/${loggedInUser}`);\n          if (response.ok) {\n            const studentData = await response.json();\n            setStudent(studentData);\n            fetchRegisteredCourses(studentData._id); // Fetch registered courses after fetching student data\n          } else {\n            console.error(\"Failed to fetch student data.\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching student data:\", error);\n      }\n    };\n    fetchStudentData();\n  }, []);\n\n  // Fetch courses that the student is already registered for\n  const fetchRegisteredCourses = async studentId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/studentCourses/${studentId}`);\n      if (response.ok) {\n        const studentCoursesData = await response.json();\n        // Extract the `courseId` from the nested `courses` array in the `studentCourses` document\n        const registeredCourseIds = studentCoursesData.map(studentCourse => studentCourse.courses.map(course => course.courseId.toString())).flat(); // Flatten the array\n        setRegisteredCourses(registeredCourseIds); // Store the array of registered course IDs\n      } else {\n        console.error(\"Failed to fetch registered courses.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching registered courses:\", error);\n    }\n  };\n\n  // Fetch courses dynamically based on program and term\n  useEffect(() => {\n    const fetchCourses = async () => {\n      if (student && term) {\n        try {\n          const response = await fetch(`http://localhost:5000/api/courses?program=${student.program}&term=${term}`);\n          if (response.ok) {\n            const coursesData = await response.json();\n            setAvailableCourses(coursesData); // Store courses in availableCourses\n          } else {\n            console.error(\"Failed to fetch courses.\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching courses:\", error);\n        }\n      }\n    };\n    fetchCourses();\n  }, [student, term]);\n\n  // Check if the course is already registered for the student\n  const isCourseAlreadyRegistered = course => {\n    // Compare the available course _id with the registered courseIds\n    return registeredCourses.includes(course._id);\n  };\n\n  // Handle course registration\n  const handleCourseRegister = async course => {\n    if (isCourseAlreadyRegistered(course)) {\n      setErrorMessage(\"You are already registered to this course.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/studentCourses`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          studentId: student._id,\n          selectedCourses: course // Send the single course\n        })\n      });\n      if (response.ok) {\n        setSuccessMessage(`Successfully registered to ${course.name} (${course.code}).`);\n        setErrorMessage(\"\");\n        fetchRegisteredCourses(student._id); // Refresh the registered courses list\n      } else {\n        setErrorMessage(`You are already registered to ${course.name}.`);\n      }\n    } catch (error) {\n      setErrorMessage(\"Error occurred while registering for the course.\");\n    }\n  };\n  const handleBackToDashboard = () => {\n    navigate(\"/dashboard\");\n  };\n  const handleLogout = () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-layout\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onViewDashboard: handleBackToDashboard,\n      onLogout: handleLogout,\n      showRegister: false,\n      showProfile: false,\n      showMessage: false,\n      showDashboard: true,\n      showLogout: true,\n      dashboardLabel: \"Dashboard\",\n      logoutLabel: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bow Course Registration System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), student && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hi there, \", student.firstName, \" (\", student.role, \") \\uD83D\\uDC4B\\uD83C\\uDFFC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 28\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-20px\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: term,\n          onChange: e => {\n            setTerm(e.target.value);\n            if (e.target.value) {\n              setErrorMessage(\"\");\n            }\n          },\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Term\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Spring\",\n            children: \"Spring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Summer\",\n            children: \"Summer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fall\",\n            children: \"Fall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Winter\",\n            children: \"Winter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), term && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          placeholder: \"Search by course name or code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), term && availableCourses.length > 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Available courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), term && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableCourses.length > 0 ? availableCourses.filter(course => searchTerm === \"\" ? true : course.name.toLowerCase().includes(searchTerm.toLowerCase()) || course.code.toLowerCase().includes(searchTerm.toLowerCase())).map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [course.name, \" (\", course.code, \") - \", course.term]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Start Date:\", \" \", new Date(course.startDate).toLocaleDateString(\"en-GB\"), \" \", \"-\", \" End Date:\", \" \", new Date(course.endDate).toLocaleDateString(\"en-GB\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCourseRegister(course),\n              disabled: isCourseAlreadyRegistered(course),\n              children: isCourseAlreadyRegistered(course) ? \"Registered\" : \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this)]\n        }, course._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No courses available for the selected term or search criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(Courses, \"aI2ExGGz8jBf+qCaNfRIYqZ14LY=\", false, function () {\n  return [useNavigate];\n});\n_c = Courses;\nexport default Courses;\nvar _c;\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Sidebar","jsxDEV","_jsxDEV","Courses","_s","term","setTerm","errorMessage","setErrorMessage","successMessage","setSuccessMessage","searchTerm","setSearchTerm","availableCourses","setAvailableCourses","registeredCourses","setRegisteredCourses","student","setStudent","navigate","fetchStudentData","loggedInUser","sessionStorage","getItem","response","fetch","ok","studentData","json","fetchRegisteredCourses","_id","console","error","studentId","studentCoursesData","registeredCourseIds","map","studentCourse","courses","course","courseId","toString","flat","fetchCourses","program","coursesData","isCourseAlreadyRegistered","includes","handleCourseRegister","method","headers","body","JSON","stringify","selectedCourses","name","code","handleBackToDashboard","handleLogout","className","children","onViewDashboard","onLogout","showRegister","showProfile","showMessage","showDashboard","showLogout","dashboardLabel","logoutLabel","fileName","_jsxFileName","lineNumber","columnNumber","firstName","role","value","onChange","e","target","required","disabled","type","placeholder","length","filter","toLowerCase","Date","startDate","toLocaleDateString","endDate","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Web Dev/assignment 1/bvc-course-registration-backend - Copy/client/src/components/Courses.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction Courses() {\r\n  const [term, setTerm] = useState(\"\"); // Term selection\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // For showing success message\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // New state for search term\r\n  const [availableCourses, setAvailableCourses] = useState([]); // Store the courses that are available\r\n  const [registeredCourses, setRegisteredCourses] = useState([]); // Store courses that are already registered\r\n  const [student, setStudent] = useState(null); // Store student data\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch student data on component mount\r\n  useEffect(() => {\r\n    const fetchStudentData = async () => {\r\n      try {\r\n        const loggedInUser = sessionStorage.getItem(\"loggedInUser\");\r\n        if (loggedInUser) {\r\n          const response = await fetch(\r\n            `http://localhost:5000/api/user/${loggedInUser}`\r\n          );\r\n          if (response.ok) {\r\n            const studentData = await response.json();\r\n            setStudent(studentData);\r\n            fetchRegisteredCourses(studentData._id); // Fetch registered courses after fetching student data\r\n          } else {\r\n            console.error(\"Failed to fetch student data.\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching student data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchStudentData();\r\n  }, []);\r\n\r\n  // Fetch courses that the student is already registered for\r\n  const fetchRegisteredCourses = async (studentId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/studentCourses/${studentId}`\r\n      );\r\n      if (response.ok) {\r\n        const studentCoursesData = await response.json();\r\n        // Extract the `courseId` from the nested `courses` array in the `studentCourses` document\r\n        const registeredCourseIds = studentCoursesData\r\n          .map((studentCourse) =>\r\n            studentCourse.courses.map((course) => course.courseId.toString())\r\n          )\r\n          .flat(); // Flatten the array\r\n        setRegisteredCourses(registeredCourseIds); // Store the array of registered course IDs\r\n      } else {\r\n        console.error(\"Failed to fetch registered courses.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching registered courses:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch courses dynamically based on program and term\r\n  useEffect(() => {\r\n    const fetchCourses = async () => {\r\n      if (student && term) {\r\n        try {\r\n          const response = await fetch(\r\n            `http://localhost:5000/api/courses?program=${student.program}&term=${term}`\r\n          );\r\n          if (response.ok) {\r\n            const coursesData = await response.json();\r\n            setAvailableCourses(coursesData); // Store courses in availableCourses\r\n          } else {\r\n            console.error(\"Failed to fetch courses.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching courses:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCourses();\r\n  }, [student, term]);\r\n\r\n  // Check if the course is already registered for the student\r\n  const isCourseAlreadyRegistered = (course) => {\r\n    // Compare the available course _id with the registered courseIds\r\n    return registeredCourses.includes(course._id);\r\n  };\r\n\r\n  // Handle course registration\r\n  const handleCourseRegister = async (course) => {\r\n    if (isCourseAlreadyRegistered(course)) {\r\n      setErrorMessage(\"You are already registered to this course.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/studentCourses`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          studentId: student._id,\r\n          selectedCourses: course, // Send the single course\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccessMessage(\r\n          `Successfully registered to ${course.name} (${course.code}).`\r\n        );\r\n        setErrorMessage(\"\");\r\n        fetchRegisteredCourses(student._id); // Refresh the registered courses list\r\n      } else {\r\n        setErrorMessage(`You are already registered to ${course.name}.`);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"Error occurred while registering for the course.\");\r\n    }\r\n  };\r\n\r\n  const handleBackToDashboard = () => {\r\n    navigate(\"/dashboard\");\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-layout\">\r\n      <Sidebar\r\n        onViewDashboard={handleBackToDashboard}\r\n        onLogout={handleLogout}\r\n        showRegister={false}\r\n        showProfile={false}\r\n        showMessage={false}\r\n        showDashboard={true}\r\n        showLogout={true}\r\n        dashboardLabel=\"Dashboard\"\r\n        logoutLabel=\"Logout\"\r\n      />\r\n\r\n      <div className=\"dashboard-content\">\r\n        <h1>Bow Course Registration System</h1>\r\n        <h2>Manage Courses</h2>\r\n\r\n        {student && (\r\n          <p>\r\n            Hi there, {student.firstName} ({student.role}) 👋🏼\r\n          </p>\r\n        )}\r\n\r\n        {successMessage && <p className=\"error-message\">{successMessage}</p>}\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n        <div className=\"mt-20px\">\r\n          <select\r\n            value={term}\r\n            onChange={(e) => {\r\n              setTerm(e.target.value);\r\n              if (e.target.value) {\r\n                setErrorMessage(\"\");\r\n              }\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select Term\r\n            </option>\r\n            <option value=\"Spring\">Spring</option>\r\n            <option value=\"Summer\">Summer</option>\r\n            <option value=\"Fall\">Fall</option>\r\n            <option value=\"Winter\">Winter</option>\r\n          </select>\r\n        </div>\r\n\r\n        {term && (\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              placeholder=\"Search by course name or code\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {term && availableCourses.length > 0 && (\r\n          <label>Available courses</label>\r\n        )}\r\n\r\n        {term && (\r\n          <ul>\r\n            {availableCourses.length > 0 ? (\r\n              availableCourses\r\n                .filter((course) =>\r\n                  searchTerm === \"\"\r\n                    ? true\r\n                    : course.name\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toLowerCase()) ||\r\n                      course.code\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toLowerCase())\r\n                )\r\n                .map((course) => (\r\n                  <li key={course._id}>\r\n                    <div>\r\n                      <strong>\r\n                        {course.name} ({course.code}) - {course.term}\r\n                      </strong>\r\n                      <br />\r\n                      <small>\r\n                        Start Date:{\" \"}\r\n                        {new Date(course.startDate).toLocaleDateString(\"en-GB\")}{\" \"}\r\n                        {\"-\"} End Date:{\" \"}\r\n                        {new Date(course.endDate).toLocaleDateString(\"en-GB\")}\r\n                      </small>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                      <button\r\n                        onClick={() => handleCourseRegister(course)}\r\n                        disabled={isCourseAlreadyRegistered(course)}\r\n                      >\r\n                        {isCourseAlreadyRegistered(course)\r\n                          ? \"Registered\"\r\n                          : \"Register\"}\r\n                      </button>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n            ) : (\r\n              <p>\r\n                No courses available for the selected term or search criteria.\r\n              </p>\r\n            )}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Courses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}