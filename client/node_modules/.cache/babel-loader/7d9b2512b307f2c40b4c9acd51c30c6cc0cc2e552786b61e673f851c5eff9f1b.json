{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Web Dev\\\\assignment 1\\\\bvc-course-registration-backend - Copy\\\\client\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [program, setProgram] = useState(\"\"); // Store selected program\n  const [term, setTerm] = useState(\"\"); // Store selected term\n  const [filteredCourses, setFilteredCourses] = useState([]); // Filtered courses based on program and term\n  const [editingCourse, setEditingCourse] = useState(null); // Store the course being edited\n  const [editedFields, setEditedFields] = useState({}); // Store edited fields\n  const navigate = useNavigate();\n\n  // Fetch user data from session\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const loggedInUser = sessionStorage.getItem(\"loggedInUser\");\n        if (loggedInUser) {\n          const response = await fetch(`http://localhost:5000/api/user/${loggedInUser}`);\n          if (response.ok) {\n            const data = await response.json();\n            setUser(data);\n\n            // If student, fetch their selected courses\n            if (data.role === \"student\") {\n              fetchStudentCourses(data._id);\n            }\n          } else {\n            console.error(\"Failed to fetch user data.\");\n          }\n        } else {\n          console.error(\"No user logged in.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Fetch courses selected by the student\n  const fetchStudentCourses = async studentId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/studentCourses/${studentId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setFilteredCourses(data); // Update the courses with the fetched data\n      } else {\n        console.error(\"Failed to fetch student courses.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching student courses:\", error);\n    }\n  };\n\n  // Fetch courses based on selected program and term\n  const fetchCourses = async (selectedProgram, selectedTerm) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/courses?program=${selectedProgram}&term=${selectedTerm}`);\n      if (response.ok) {\n        const data = await response.json();\n        setFilteredCourses(data); // Update filtered courses based on response\n      } else {\n        console.error(\"Failed to fetch courses.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching courses:\", error);\n    }\n  };\n  const handleProgramChange = e => {\n    setProgram(e.target.value);\n    setTerm(\"\"); // Reset term when a new program is selected\n    setFilteredCourses([]); // Clear filtered courses\n  };\n  const handleTermChange = e => {\n    const selectedTerm = e.target.value;\n    setTerm(selectedTerm);\n\n    // Fetch courses based on selected program and term\n    if (program && selectedTerm) {\n      fetchCourses(program, selectedTerm);\n    }\n  };\n  const handleEditCourse = course => {\n    setEditingCourse(course); // Set the course being edited\n\n    // Pre-fill the form with course data, including formatted startDate and endDate\n    setEditedFields({\n      ...course,\n      startDate: new Date(course.startDate).toISOString().split(\"T\")[0],\n      endDate: new Date(course.endDate).toISOString().split(\"T\")[0]\n    });\n  };\n  const handleFieldChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedFields({\n      ...editedFields,\n      [name]: value\n    }); // Update the fields with the edited values\n  };\n  const handleUpdateCourse = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/courses/${editingCourse._id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(editedFields)\n      });\n      if (response.ok) {\n        setEditingCourse(null); // Clear the editing state\n        fetchCourses(program, term); // Refresh the courses after editing\n      } else {\n        console.error(\"Failed to update course.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating course:\", error);\n    }\n  };\n  const handleRemoveCourse = async courseId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/courses/${courseId}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        console.log(\"Course removed successfully from student's list.\");\n\n        // Update the local state to reflect the removal of the course\n        setFilteredCourses(filteredCourses.filter(course => course._id !== courseId));\n      } else {\n        console.error(\"Failed to remove course.\");\n        const errorText = await response.text();\n        console.error(\"Error details:\", errorText); // Log any error messages from the server\n      }\n    } catch (error) {\n      console.error(\"Error removing course:\", error);\n    }\n  };\n  const handleStudentRemoveCourse = async courseId => {\n    console.log(`Attempting to remove course with courseId: ${courseId} for studentId: ${user._id}`);\n    try {\n      console.log(`Attempting to remove course with courseId: ${courseId} for studentId: ${user._id}`);\n      const response = await fetch(`http://localhost:5000/api/studentCourses/${user._id}/${courseId}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        console.log(\"Course removed successfully from student's list.\");\n\n        // Update the local state to reflect the removal of the course\n        setFilteredCourses(prevCourses => prevCourses.filter(course => course.courseId.toString() !== courseId));\n      } else {\n        const errorText = await response.text();\n        console.error(\"Failed to remove course:\", errorText);\n      }\n    } catch (error) {\n      console.error(\"Error removing course:\", error);\n    }\n  };\n  const handleLogout = () => {\n    sessionStorage.removeItem(\"loggedInUser\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-layout\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onViewDashboard: () => navigate(\"/dashboard\"),\n      onCreateCourse: user && user.role === \"admin\" ? () => navigate(\"/create-course\") : null,\n      onViewStudents: user && user.role === \"admin\" ? () => navigate(\"/students\") : null,\n      onViewMessages: user && user.role === \"admin\" ? () => navigate(\"/messages\") : null,\n      onRegister: user && user.role === \"student\" ? () => navigate(\"/courses\") : null,\n      onViewProfile: () => navigate(\"/profile\", {\n        state: {\n          username: user.username\n        }\n      }),\n      onSendMessage: user && user.role === \"student\" ? () => navigate(\"/message\") : null,\n      showCreateCourse: user && user.role === \"admin\",\n      showViewStudents: user && user.role === \"admin\",\n      showViewMessages: user && user.role === \"admin\",\n      showRegister: user && user.role === \"student\",\n      showMessage: user && user.role === \"student\",\n      showProfile: true,\n      showLogout: true,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bow Course Registration System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), user ? user.role === \"student\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hi there, \", user.firstName, \" (\", user.role, \") \\uD83D\\uDC4B\\uD83C\\uDFFC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Student ID: \", user.userID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Program: \", user.program]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Department: Software Development\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-20px\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Registered Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), filteredCourses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: filteredCourses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [course.name, \" (\", course.code, \") - \", course.term]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"Start Date:\", \" \", new Date(course.startDate).toLocaleDateString(\"en-GB\"), \" \", \"-\", \" End Date:\", \" \", new Date(course.endDate).toLocaleDateString(\"en-GB\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-group\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleStudentRemoveCourse(course.courseId),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this)]\n            }, course.courseId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No courses registered.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this) : user.role === \"admin\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hi there, \", user.firstName, \" (\", user.role, \") \\uD83D\\uDC4B\\uD83C\\uDFFC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-20px\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: program,\n            onChange: handleProgramChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Program\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Diploma\",\n              children: \"Software Development - Diploma (2 years)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Post-Diploma\",\n              children: \"Software Development - Post-Diploma (1 year)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Certificate\",\n              children: \"Software Development - Certificate (6 months)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this), program && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: term,\n            onChange: handleTermChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Spring\",\n              children: \"Spring\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Summer\",\n              children: \"Summer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Fall\",\n              children: \"Fall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Winter\",\n              children: \"Winter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }, this), term && filteredCourses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: filteredCourses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [course.name, \" (\", course.code, \") - \", course.term]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Start Date:\", \" \", new Date(course.startDate).toLocaleDateString(\"en-GB\"), \" \", \"-\", \" End Date:\", \" \", new Date(course.endDate).toLocaleDateString(\"en-GB\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditCourse(course),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRemoveCourse(course._id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 23\n            }, this)]\n          }, course._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }, this) : term && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No courses available for the selected program and term.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 19\n        }, this), editingCourse && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-course-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Edit Course: \", editingCourse.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Course Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: editedFields.name,\n              onChange: handleFieldChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Course Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"code\",\n              value: editedFields.code,\n              onChange: handleFieldChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"program\",\n              value: editedFields.program,\n              onChange: handleFieldChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Diploma\",\n                children: \"Diploma\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Post-Diploma\",\n                children: \"Post-Diploma\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Certificate\",\n                children: \"Certificate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"term\",\n              value: editedFields.term,\n              onChange: handleFieldChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Spring\",\n                children: \"Spring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Summer\",\n                children: \"Summer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Fall\",\n                children: \"Fall\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Winter\",\n                children: \"Winter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"startDate\",\n              value: editedFields.startDate,\n              onChange: handleFieldChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"endDate\",\n              value: editedFields.endDate,\n              onChange: handleFieldChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleUpdateCourse,\n              children: \"Update Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setEditingCourse(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User role not recognized.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"qsuP247f2x/qm0KzyH1qhM3RPbo=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","user","setUser","program","setProgram","term","setTerm","filteredCourses","setFilteredCourses","editingCourse","setEditingCourse","editedFields","setEditedFields","navigate","fetchUserData","loggedInUser","sessionStorage","getItem","response","fetch","ok","data","json","role","fetchStudentCourses","_id","console","error","studentId","fetchCourses","selectedProgram","selectedTerm","handleProgramChange","e","target","value","handleTermChange","handleEditCourse","course","startDate","Date","toISOString","split","endDate","handleFieldChange","name","handleUpdateCourse","method","headers","body","JSON","stringify","handleRemoveCourse","courseId","log","filter","errorText","text","handleStudentRemoveCourse","prevCourses","toString","handleLogout","removeItem","className","children","onViewDashboard","onCreateCourse","onViewStudents","onViewMessages","onRegister","onViewProfile","state","username","onSendMessage","showCreateCourse","showViewStudents","showViewMessages","showRegister","showMessage","showProfile","showLogout","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","firstName","userID","length","map","code","toLocaleDateString","onClick","onChange","required","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Web Dev/assignment 1/bvc-course-registration-backend - Copy/client/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction Dashboard() {\r\n  const [user, setUser] = useState(null);\r\n  const [program, setProgram] = useState(\"\"); // Store selected program\r\n  const [term, setTerm] = useState(\"\"); // Store selected term\r\n  const [filteredCourses, setFilteredCourses] = useState([]); // Filtered courses based on program and term\r\n  const [editingCourse, setEditingCourse] = useState(null); // Store the course being edited\r\n  const [editedFields, setEditedFields] = useState({}); // Store edited fields\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch user data from session\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const loggedInUser = sessionStorage.getItem(\"loggedInUser\");\r\n\r\n        if (loggedInUser) {\r\n          const response = await fetch(\r\n            `http://localhost:5000/api/user/${loggedInUser}`\r\n          );\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setUser(data);\r\n\r\n            // If student, fetch their selected courses\r\n            if (data.role === \"student\") {\r\n              fetchStudentCourses(data._id);\r\n            }\r\n          } else {\r\n            console.error(\"Failed to fetch user data.\");\r\n          }\r\n        } else {\r\n          console.error(\"No user logged in.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  // Fetch courses selected by the student\r\n  const fetchStudentCourses = async (studentId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/studentCourses/${studentId}`\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFilteredCourses(data); // Update the courses with the fetched data\r\n      } else {\r\n        console.error(\"Failed to fetch student courses.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching student courses:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch courses based on selected program and term\r\n  const fetchCourses = async (selectedProgram, selectedTerm) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/courses?program=${selectedProgram}&term=${selectedTerm}`\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFilteredCourses(data); // Update filtered courses based on response\r\n      } else {\r\n        console.error(\"Failed to fetch courses.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching courses:\", error);\r\n    }\r\n  };\r\n\r\n  const handleProgramChange = (e) => {\r\n    setProgram(e.target.value);\r\n    setTerm(\"\"); // Reset term when a new program is selected\r\n    setFilteredCourses([]); // Clear filtered courses\r\n  };\r\n\r\n  const handleTermChange = (e) => {\r\n    const selectedTerm = e.target.value;\r\n    setTerm(selectedTerm);\r\n\r\n    // Fetch courses based on selected program and term\r\n    if (program && selectedTerm) {\r\n      fetchCourses(program, selectedTerm);\r\n    }\r\n  };\r\n\r\n  const handleEditCourse = (course) => {\r\n    setEditingCourse(course); // Set the course being edited\r\n\r\n    // Pre-fill the form with course data, including formatted startDate and endDate\r\n    setEditedFields({\r\n      ...course,\r\n      startDate: new Date(course.startDate).toISOString().split(\"T\")[0],\r\n      endDate: new Date(course.endDate).toISOString().split(\"T\")[0],\r\n    });\r\n  };\r\n\r\n  const handleFieldChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedFields({ ...editedFields, [name]: value }); // Update the fields with the edited values\r\n  };\r\n\r\n  const handleUpdateCourse = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/courses/${editingCourse._id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(editedFields),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        setEditingCourse(null); // Clear the editing state\r\n        fetchCourses(program, term); // Refresh the courses after editing\r\n      } else {\r\n        console.error(\"Failed to update course.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating course:\", error);\r\n    }\r\n  };\r\n\r\n  const handleRemoveCourse = async (courseId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/courses/${courseId}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        console.log(\"Course removed successfully from student's list.\");\r\n\r\n        // Update the local state to reflect the removal of the course\r\n        setFilteredCourses(\r\n          filteredCourses.filter((course) => course._id !== courseId)\r\n        );\r\n      } else {\r\n        console.error(\"Failed to remove course.\");\r\n        const errorText = await response.text();\r\n        console.error(\"Error details:\", errorText); // Log any error messages from the server\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error removing course:\", error);\r\n    }\r\n  };\r\n\r\n  const handleStudentRemoveCourse = async (courseId) => {\r\n    console.log(\r\n      `Attempting to remove course with courseId: ${courseId} for studentId: ${user._id}`\r\n    );\r\n\r\n    try {\r\n      console.log(\r\n        `Attempting to remove course with courseId: ${courseId} for studentId: ${user._id}`\r\n      );\r\n\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/studentCourses/${user._id}/${courseId}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        console.log(\"Course removed successfully from student's list.\");\r\n\r\n        // Update the local state to reflect the removal of the course\r\n        setFilteredCourses((prevCourses) =>\r\n          prevCourses.filter(\r\n            (course) => course.courseId.toString() !== courseId\r\n          )\r\n        );\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error(\"Failed to remove course:\", errorText);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error removing course:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem(\"loggedInUser\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-layout\">\r\n      <Sidebar\r\n        onViewDashboard={() => navigate(\"/dashboard\")}\r\n        onCreateCourse={\r\n          user && user.role === \"admin\"\r\n            ? () => navigate(\"/create-course\")\r\n            : null\r\n        }\r\n        onViewStudents={\r\n          user && user.role === \"admin\" ? () => navigate(\"/students\") : null\r\n        }\r\n        onViewMessages={\r\n          user && user.role === \"admin\" ? () => navigate(\"/messages\") : null\r\n        }\r\n        onRegister={\r\n          user && user.role === \"student\" ? () => navigate(\"/courses\") : null\r\n        }\r\n        onViewProfile={() =>\r\n          navigate(\"/profile\", { state: { username: user.username } })\r\n        }\r\n        onSendMessage={\r\n          user && user.role === \"student\" ? () => navigate(\"/message\") : null\r\n        }\r\n        showCreateCourse={user && user.role === \"admin\"}\r\n        showViewStudents={user && user.role === \"admin\"}\r\n        showViewMessages={user && user.role === \"admin\"}\r\n        showRegister={user && user.role === \"student\"}\r\n        showMessage={user && user.role === \"student\"}\r\n        showProfile={true}\r\n        showLogout={true}\r\n        onLogout={handleLogout}\r\n      />\r\n\r\n      <div className=\"dashboard-content\">\r\n        <h1>Bow Course Registration System</h1>\r\n        <h2>Dashboard</h2>\r\n        {user ? (\r\n          user.role === \"student\" ? (\r\n            <div>\r\n              <p>\r\n                Hi there, {user.firstName} ({user.role}) 👋🏼\r\n              </p>\r\n              <p>Student ID: {user.userID}</p>\r\n              <p>Program: {user.program}</p>\r\n              <p>Department: Software Development</p>\r\n\r\n              <div className=\"mt-20px\">\r\n                <label>Registered Courses</label>\r\n                {filteredCourses.length > 0 ? (\r\n                  <ul>\r\n                    {filteredCourses.map((course) => (\r\n                      <li key={course.courseId}>\r\n                        <div>\r\n                          <strong>\r\n                            {course.name} ({course.code}) - {course.term}\r\n                          </strong>\r\n                          <br />\r\n                          <small>\r\n                            Start Date:{\" \"}\r\n                            {new Date(course.startDate).toLocaleDateString(\r\n                              \"en-GB\"\r\n                            )}{\" \"}\r\n                            {\"-\"} End Date:{\" \"}\r\n                            {new Date(course.endDate).toLocaleDateString(\r\n                              \"en-GB\"\r\n                            )}\r\n                          </small>\r\n                        </div>\r\n                        <div className=\"button-group\">\r\n                          <button\r\n                            onClick={() =>\r\n                              handleStudentRemoveCourse(course.courseId)\r\n                            }\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p>No courses registered.</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : user.role === \"admin\" ? (\r\n            <>\r\n              <p>\r\n                Hi there, {user.firstName} ({user.role}) 👋🏼\r\n              </p>\r\n              <div className=\"mt-20px\">\r\n                <select value={program} onChange={handleProgramChange} required>\r\n                  <option value=\"\" disabled>\r\n                    Select Program\r\n                  </option>\r\n                  <option value=\"Diploma\">\r\n                    Software Development - Diploma (2 years)\r\n                  </option>\r\n                  <option value=\"Post-Diploma\">\r\n                    Software Development - Post-Diploma (1 year)\r\n                  </option>\r\n                  <option value=\"Certificate\">\r\n                    Software Development - Certificate (6 months)\r\n                  </option>\r\n                </select>\r\n              </div>\r\n\r\n              {program && (\r\n                <div>\r\n                  <select value={term} onChange={handleTermChange} required>\r\n                    <option value=\"\" disabled>\r\n                      Select Term\r\n                    </option>\r\n                    <option value=\"Spring\">Spring</option>\r\n                    <option value=\"Summer\">Summer</option>\r\n                    <option value=\"Fall\">Fall</option>\r\n                    <option value=\"Winter\">Winter</option>\r\n                  </select>\r\n                </div>\r\n              )}\r\n\r\n              {term && filteredCourses.length > 0 ? (\r\n                <ul>\r\n                  {filteredCourses.map((course) => (\r\n                    <li key={course._id}>\r\n                      <div>\r\n                        <strong>\r\n                          {course.name} ({course.code}) - {course.term}\r\n                        </strong>\r\n                        <br />\r\n                        <small>\r\n                          Start Date:{\" \"}\r\n                          {new Date(course.startDate).toLocaleDateString(\r\n                            \"en-GB\"\r\n                          )}{\" \"}\r\n                          {\"-\"} End Date:{\" \"}\r\n                          {new Date(course.endDate).toLocaleDateString(\"en-GB\")}\r\n                        </small>\r\n                      </div>\r\n                      <div className=\"button-group\">\r\n                        <button onClick={() => handleEditCourse(course)}>\r\n                          Edit\r\n                        </button>\r\n                        <button onClick={() => handleRemoveCourse(course._id)}>\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                term && (\r\n                  <p>No courses available for the selected program and term.</p>\r\n                )\r\n              )}\r\n\r\n              {/* Show edit form if a course is being edited */}\r\n              {editingCourse && (\r\n                <div className=\"edit-course-section\">\r\n                  <h3>Edit Course: {editingCourse.name}</h3>\r\n                  <form>\r\n                    <label>Course Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={editedFields.name}\r\n                      onChange={handleFieldChange}\r\n                      required\r\n                    />\r\n                    <label>Course Code</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"code\"\r\n                      value={editedFields.code}\r\n                      onChange={handleFieldChange}\r\n                      required\r\n                    />\r\n                    <select\r\n                      name=\"program\"\r\n                      value={editedFields.program}\r\n                      onChange={handleFieldChange}\r\n                      required\r\n                    >\r\n                      <option value=\"Diploma\">Diploma</option>\r\n                      <option value=\"Post-Diploma\">Post-Diploma</option>\r\n                      <option value=\"Certificate\">Certificate</option>\r\n                    </select>\r\n                    <select\r\n                      name=\"term\"\r\n                      value={editedFields.term}\r\n                      onChange={handleFieldChange}\r\n                      required\r\n                    >\r\n                      <option value=\"Spring\">Spring</option>\r\n                      <option value=\"Summer\">Summer</option>\r\n                      <option value=\"Fall\">Fall</option>\r\n                      <option value=\"Winter\">Winter</option>\r\n                    </select>\r\n                    <label>Start Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"startDate\"\r\n                      value={editedFields.startDate}\r\n                      onChange={handleFieldChange}\r\n                      required\r\n                    />\r\n                    <label>End Date</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"endDate\"\r\n                      value={editedFields.endDate}\r\n                      onChange={handleFieldChange}\r\n                      required\r\n                    />\r\n                    <button type=\"button\" onClick={handleUpdateCourse}>\r\n                      Update Course\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setEditingCourse(null)}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <p>User role not recognized.</p>\r\n          )\r\n        ) : (\r\n          <p>Loading user data...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}